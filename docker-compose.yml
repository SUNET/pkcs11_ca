version: "3.3"

services:
  ca:
    build:
      context: .
      dockerfile: containers/ca/Dockerfile
    ports:
      - "8005:8005"
    depends_on:
      - "postgres"
    restart: always
    #read_only: true
    #cap_drop: [ALL]
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./data/hsm_tokens:/var/lib/softhsm/tokens
    tmpfs:
      - /dev/shm:ro,noexec,nosuid,nodev
    environment:
      - CA_URL=${CA_URL}
      - ACME_ROOT=${ACME_ROOT}
      - PKCS11_SIGN_API_TOKEN=${PKCS11_SIGN_API_TOKEN}
      - PKCS11_TOKEN=${PKCS11_TOKEN}
      - PKCS11_PIN=${PKCS11_PIN}
      - PKCS11_MODULE=${PKCS11_MODULE}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_TIMEOUT=${POSTGRES_TIMEOUT}

  postgres:
    image: postgres:15.3-bookworm@sha256:ad126c2b7482bf0ea4f90c2cbb9ab1dfec41ab58d8bef773273a3a1733ad6af0
    restart: always
    volumes:
      - ./data/db_data:/var/lib/postgresql/data
    tmpfs:
      - /dev/shm:ro,noexec,nosuid,nodev
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  pdfsign:
    image: docker.sunet.se/dc4eu/pkcs11_pdfsign:latest
    ports:
      - "8080:8080"
    depends_on:
      - "ca"
    restart: always
    #cap_drop: [ALL]
    #security_opt:
    #  - no-new-privileges:true
    tmpfs:
      - /dev/shm:ro,noexec,nosuid,nodev
    environment:
      - CA_URL=${CA_URL}
      - ACME_ROOT=${ACME_ROOT}
      - PKCS11_SIGN_API_TOKEN=${PKCS11_SIGN_API_TOKEN}
    entrypoint: ['true']
